{"expireTime":9007200819798512000,"key":"gatsby-plugin-mdx-entire-payload-4a240338c152fdda9555a6281d24148c-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"When should you use a PWA?","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":30,"offset":30},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":30,"offset":30},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The hardest problem with software is distribution. App developers often spend more on distribution than they earn back. This problem is solved by the web platform, however web apps have historically been less capable than native apps. With the advent of PWAs, web apps have become just as capable as native, supporting features such as push notifications and Add to Homescreen, without giving up the reach of the web.","position":{"start":{"line":4,"column":1,"offset":32},"end":{"line":4,"column":418,"offset":449},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":32},"end":{"line":4,"column":418,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Progressive Web Apps combine the best of the native applications and the Web. This session outlines the business case, and gives an overview of PWA features.","position":{"start":{"line":6,"column":1,"offset":451},"end":{"line":6,"column":158,"offset":608},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":451},"end":{"line":6,"column":158,"offset":608},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"When should you use a PWA?\",\"youtubeId\":\"DfFlBWCQjzA\",\"duration\":344}","position":{"start":{"line":8,"column":1,"offset":610},"end":{"line":8,"column":108,"offset":717},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":8,"column":108,"offset":717}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"When should you use a PWA?\",\n  \"youtubeId\": \"DfFlBWCQjzA\",\n  \"duration\": 344\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"when-should-you-use-a-pwa\"\n  }, \"When should you use a PWA?\"), mdx(\"p\", null, \"The hardest problem with software is distribution. App developers often spend more on distribution than they earn back. This problem is solved by the web platform, however web apps have historically been less capable than native apps. With the advent of PWAs, web apps have become just as capable as native, supporting features such as push notifications and Add to Homescreen, without giving up the reach of the web.\"), mdx(\"p\", null, \"Progressive Web Apps combine the best of the native applications and the Web. This session outlines the business case, and gives an overview of PWA features.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\"title\":\"When should you use a PWA?\",\"youtubeId\":\"DfFlBWCQjzA\",\"duration\":344}\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"when-should-you-use-a-pwa\"\n    }}>{`When should you use a PWA?`}</h2>\n    <p>{`The hardest problem with software is distribution. App developers often spend more on distribution than they earn back. This problem is solved by the web platform, however web apps have historically been less capable than native apps. With the advent of PWAs, web apps have become just as capable as native, supporting features such as push notifications and Add to Homescreen, without giving up the reach of the web.`}</p>\n    <p>{`Progressive Web Apps combine the best of the native applications and the Web. This session outlines the business case, and gives an overview of PWA features.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}