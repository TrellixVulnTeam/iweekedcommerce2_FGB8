{"componentChunkName":"component---src-templates-lesson-page-js","path":"/bitcoin-and-cryptocurrency/04-how-to-store-and-use-bitcoins/","webpackCompilationHash":"a16c2e57d401e22678c3","result":{"data":{"currentLesson":{"id":"a2e86635-4605-5103-8ce6-662158782f4e","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to Store and Use Bitcoins\",\n  \"youtubeId\": \"NKqHXoYZvMg\",\n  \"duration\": 4871\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"assignment-2-consensus-from-trust\"\n  }, \"Assignment 2: Consensus from trust\"), mdx(\"p\", null, \"For this assignment, you will design and implement a distributed consensus algorithm given a graph of \\u201Ctrust\\u201D relationships between nodes. This is an alternative method of resisting sybil attacks and achieving consensus; it has the benefit of not \\u201Cwasting\\u201D electricity like proof-of-work does.\"), mdx(\"p\", null, \"Nodes in the network are either compliant or malicious. You will write a CompliantNode class (which implements a provided Node interface) that defines the behavior of each of the compliant nodes. The network is a directed random graph, where each edge represents a trust relationship. For example, if there is an A \\u2192 B edge, it means that Node B listens to transactions broadcast by node A. We say that B is A\\u2019s follower and A is B\\u2019s followee.\"), mdx(\"p\", null, \"The provided Node class has the following API:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"public interface Node {\\n  // NOTE: Node is an interface and does not have a constructor.\\n  // However, your CompliantNode.java class requires a 4 argument\\n  // constructor as defined in the provided CompliantNode.java.\\n  // This constructor gives your node information about the simulation\\n  // including the number of rounds it will run for.\\n\\n  /** {@code followees[i]} is true if this node follows node {@code i} */\\n  void setFollowees ( boolean [] followees);\\n\\n  /** initialize proposal list of transactions */\\n  void setPendingTransaction ( Set<Transaction> pendingTransactions);\\n\\n  /**\\n  * @return proposals to send to my followers. REMEMBER: After final round,\\n  * behavior of { @code getProposals} changes and it should return the\\n  * transactions upon which consensus has been reached.\\n  */\\n  Set<Transaction> sendToFollowers ();\\n  \\n  /** receive candidates from other nodes. */\\n  void receiveFromFollowees ( Set<Candidate> candidates);\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","title":"How to Store and Use Bitcoins","duration":4871,"youtubeId":"NKqHXoYZvMg"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"a2e86635-4605-5103-8ce6-662158782f4e","lesson":{"id":"a2e86635-4605-5103-8ce6-662158782f4e","title":"How to Store and Use Bitcoins","slug":"/bitcoin-and-cryptocurrency/04-how-to-store-and-use-bitcoins/","duration":4871},"currentCourse":{"id":"0a740fa9-6a20-58fb-b958-8decc3f71afe","title":"Bitcoin and Cryptocurrency","slug":"/bitcoin-and-cryptocurrency/","premium":"member only","lessons":[{"id":"d71b873f-afcf-5aaa-bbb5-5f99d9e13710","title":"Intro to Crypto and Cryptocurrencies","slug":"/bitcoin-and-cryptocurrency/01-intro/","duration":3521},{"id":"e9882e26-e79e-54ac-8636-86159b5cb2d3","title":"How Bitcoin Achieves Decentralization","slug":"/bitcoin-and-cryptocurrency/02-how-bitcoin-achieves-decentralization/","duration":4420},{"id":"1a481b5a-d871-5a60-a508-d6fb104d3bb3","title":"Mechanics of Bitcoin","slug":"/bitcoin-and-cryptocurrency/03-mechanics-of-bitcoin/","duration":4789},{"id":"a2e86635-4605-5103-8ce6-662158782f4e","title":"How to Store and Use Bitcoins","slug":"/bitcoin-and-cryptocurrency/04-how-to-store-and-use-bitcoins/","duration":4871},{"id":"5642fe95-94a1-5110-a87d-d17074c2cb57","title":"Bitcoin Mining","slug":"/bitcoin-and-cryptocurrency/05-bitcoin-mining/","duration":5294},{"id":"c8214f5a-d319-5b83-b7ad-0926315625a1","title":"Bitcoin and Anonymity","slug":"/bitcoin-and-cryptocurrency/06-bitcoin-and-anonymity/","duration":6727},{"id":"00eedf82-0d8d-5e80-ad93-db5a9944210c","title":"Community, Politics, and Regulation","slug":"/bitcoin-and-cryptocurrency/07-community-politics-and-regulation/","duration":4357}]},"previousLesson":{"id":"1a481b5a-d871-5a60-a508-d6fb104d3bb3","title":"Mechanics of Bitcoin","slug":"/bitcoin-and-cryptocurrency/03-mechanics-of-bitcoin/","duration":4789},"nextLesson":{"id":"5642fe95-94a1-5110-a87d-d17074c2cb57","title":"Bitcoin Mining","slug":"/bitcoin-and-cryptocurrency/05-bitcoin-mining/","duration":5294},"premium":"member only"}}}