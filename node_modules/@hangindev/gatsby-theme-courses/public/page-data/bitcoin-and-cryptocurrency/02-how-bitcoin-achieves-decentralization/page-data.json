{"componentChunkName":"component---src-templates-lesson-page-js","path":"/bitcoin-and-cryptocurrency/02-how-bitcoin-achieves-decentralization/","webpackCompilationHash":"a16c2e57d401e22678c3","result":{"data":{"currentLesson":{"id":"e9882e26-e79e-54ac-8636-86159b5cb2d3","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How Bitcoin Achieves Decentralization\",\n  \"youtubeId\": \"q5GWwTgRIT4\",\n  \"duration\": 4420\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"assignment-1-scroogecoin\"\n  }, \"Assignment 1: ScroogeCoin\"), mdx(\"p\", null, \"You will be responsible for creating a file called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TxHandler.java\"), \" that implements the following API:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"public class TxHandler {\\n\\n  /** Creates a public ledger whose current UTXOPool (collection of unspent\\n  * transaction outputs) is utxoPool. This should make a defensive copy of\\n  * utxoPool by using the UTXOPool(UTXOPool uPool) constructor.\\n  */\\n  public TxHandler (UTXOPool utxoPool);\\n  \\n  /** Returns true if\\n  * (1) all outputs claimed by tx are in the current UTXO pool,\\n  * (2) the signatures on each input of tx are valid,\\n  * (3) no UTXO is claimed multiple times by tx,\\n  * (4) all of tx\\u2019s output values are non-negative, and\\n  * (5) the sum of tx\\u2019s input values is greater than or equal to the sum of\\n  its output values; and false otherwise.\\n  */\\n  public boolean isValidTx (Transaction tx);\\n  \\n  /** Handles each epoch by receiving an unordered array of proposed\\n  * transactions, checking each transaction for correctness,\\n  * returning a mutually valid array of accepted transactions,\\n  * and updating the current UTXO pool as appropriate.\\n  */\\n  public Transaction[] handleTxs (Transaction[] possibleTxs);\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","title":"How Bitcoin Achieves Decentralization","duration":4420,"youtubeId":"q5GWwTgRIT4"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"e9882e26-e79e-54ac-8636-86159b5cb2d3","lesson":{"id":"e9882e26-e79e-54ac-8636-86159b5cb2d3","title":"How Bitcoin Achieves Decentralization","slug":"/bitcoin-and-cryptocurrency/02-how-bitcoin-achieves-decentralization/","duration":4420},"currentCourse":{"id":"0a740fa9-6a20-58fb-b958-8decc3f71afe","title":"Bitcoin and Cryptocurrency","slug":"/bitcoin-and-cryptocurrency/","premium":"member only","lessons":[{"id":"d71b873f-afcf-5aaa-bbb5-5f99d9e13710","title":"Intro to Crypto and Cryptocurrencies","slug":"/bitcoin-and-cryptocurrency/01-intro/","duration":3521},{"id":"e9882e26-e79e-54ac-8636-86159b5cb2d3","title":"How Bitcoin Achieves Decentralization","slug":"/bitcoin-and-cryptocurrency/02-how-bitcoin-achieves-decentralization/","duration":4420},{"id":"1a481b5a-d871-5a60-a508-d6fb104d3bb3","title":"Mechanics of Bitcoin","slug":"/bitcoin-and-cryptocurrency/03-mechanics-of-bitcoin/","duration":4789},{"id":"a2e86635-4605-5103-8ce6-662158782f4e","title":"How to Store and Use Bitcoins","slug":"/bitcoin-and-cryptocurrency/04-how-to-store-and-use-bitcoins/","duration":4871},{"id":"5642fe95-94a1-5110-a87d-d17074c2cb57","title":"Bitcoin Mining","slug":"/bitcoin-and-cryptocurrency/05-bitcoin-mining/","duration":5294},{"id":"c8214f5a-d319-5b83-b7ad-0926315625a1","title":"Bitcoin and Anonymity","slug":"/bitcoin-and-cryptocurrency/06-bitcoin-and-anonymity/","duration":6727},{"id":"00eedf82-0d8d-5e80-ad93-db5a9944210c","title":"Community, Politics, and Regulation","slug":"/bitcoin-and-cryptocurrency/07-community-politics-and-regulation/","duration":4357}]},"previousLesson":{"id":"d71b873f-afcf-5aaa-bbb5-5f99d9e13710","title":"Intro to Crypto and Cryptocurrencies","slug":"/bitcoin-and-cryptocurrency/01-intro/","duration":3521},"nextLesson":{"id":"1a481b5a-d871-5a60-a508-d6fb104d3bb3","title":"Mechanics of Bitcoin","slug":"/bitcoin-and-cryptocurrency/03-mechanics-of-bitcoin/","duration":4789},"premium":"member only"}}}